---
title: Migrate configurations for channels using solutions
description: Learn to use solutions for exporting and importing configuration pertaining channels from source to target environments in Omnichannel for Customer Service.
ms.date: 03/29/2024
ms.topic: how-to
author: marcoje
ms.author: marcoje
ms.reviewer:
ms.collection:
ms.custom: bap-template
---

# Migrate configurations for channels using solutions

Use solutions and the Configuration Migration tool to migrate the configurations from the source organization to the target organization for channels.

For information on how to use solutions or the Configuration Migration tool, see [Overview of tools and apps used for ALM in Power Platform](/power-platform/alm/tools-apps-used-alm).

## Prerequisites

The following prerequisites must be met:

- Ensure that the user who performs the channel configuration migration has the required privileges below:
  - Export solutions in the source environment
  - Import solutions in the destination environment
  - Read privilege on all tables migrated from the source environment using Configuration Migration Tool
  - Full privileges on all tables migrated to the destination environment using Configuration Migration Tool 
- In the source environment, if a ruleset refers to the following, then ensure that they exist in the target organization before you proceed with the migration:
  - Custom entities
  - Attributes
  - Relationships
  - Option sets
  - Lookup values

> [!IMPORTANT]
>
> The migration of the account, channel provider, bot configuration, and AI and analytics settings is not in scope.

## Channel configuration migration steps

You must perform the steps in the order they're listed to migrate your configuration data successfully:

1. Migrate configuration for session templates and notification templates
1. Migrate configuration for skill-based routing
1. Migrate configuration for channel queues
1. Migrate configuration for new capacity profiles
1. Migrate configuration for channel workstreams and channel settings
1. Verify your migration

## Migrate configuration for session templates and notification templates

If you use custom session templates and notifications in your WhatsApp routing setup, perform the steps outlined in [Migrate configuration for session templates and notification templates](migrate-config-data-for-records.md#migrate-configuration-using-a-solution).

## Migrate configuration for skill-based routing rulesets

If skill-based routing rulesets are used in your unified routing setup, perform the steps outlined in [Migrate configurations for skill-based routing rulesets](migrate-config-data-for-records.md#migrate-configuration-for-skill-based-routing-rulesets). Make sure to adjust any filtering fetch xml appropriately for the channels you want to migrate.

## Migrate configuration for new capacity profiles

If you have configured new capacity profiles in your routing setup for channels, perform the steps outlined in [Export and import data for capacity profiles](migrate-config-data-for-records.md#migrate-configuration-for-capacity-profiles).  Make sure to adjust any filtering fetch xml appropriately for all channels.

> [!IMPORTANT]
>
> Once a new capacity profile is migrated using Configuration Migration Tool, updates can be migrated using solutions.

## Migrate configuration for queues

For migrating channel queues, perform the steps outlined in [Migrate configuration for queues](migrate-config-data-for-records.md#migrate-configuration-for-record-queues).  Make sure to adjust any filtering fetch xml appropriately for all channels you want to migrate.

## Migrate configuration for channel workstreams and channel settings

1. Create a solution to export configurations from the source organization for all workstreams and the channels that can be migrated via solution.
1. Add the required records to the solution using the Add existing button in the command bar and selecting the starting table for each channel you need to export, as defined in the following table:

   |Channel  |Starting table  |
   |---------|----------------|
   |Live Chat|Chat widget (msdyn_livechatconfig)|
   |Voice|Voice channel setting (msdyn_ocvoicechannelsetting)|
   |SMS|SMS number settings (msdyn_ocsmschannelsetting)|
   |WhatsApp|WhatsApp number (msdyn_ocwhatsappchannelnumber)|
   |WeChat|WeChat account (msdyn_ocwechatchannelconfig)|
   |Apple Messages for Business|Apple messages for business account (msdyn_ocapplebusinessaccount)|
   |Facebook|Work stream (msdyn_liveworkstream)|
   |Google Business Messages|Work stream (msdyn_liveworkstream)|
   |LINE|Work stream (msdyn_liveworkstream)|
   |Microsoft Teams|Work stream (msdyn_liveworkstream)|
   |Custom channel|Work stream (msdyn_liveworkstream)|

1. Select the records from channel definition table for each channel and add them to the solution. Related records from the following tables are automatically added to the solution:

   |Channel  |Tables automatically added to solution  |
   |---------|----------------------------------------|
   |All channels|Work stream (msdyn_liveworkstream)<br>Capacity profile (msdyn_capacityprofile) – new records must be [migrated using Configuration Migration Tool](#_Migrate_configuration_for)<br>Work stream capacity profile (msdyn_liveworkstreamcapacityprofile)<br>Context variable (msdyn_ocliveworkstreamcontextvariable)<br>Decision contract (msdyn_decisioncontract)<br>Decision rule set (msdyn_decisionruleset)<br>Routing configuration (msdyn_routingconfiguration)<br>Routing configuration step (msdyn_routingconfigurationstep)<br>Language (msdyn_oclanguage) – except voice and custom channel|
   |Live chat|Chat widget (msdyn_livechatconfig)<br>Authentication settings (msdyn_authenticationsettings)<br>Survey Answer Option (msdyn_chatansweroption)<br>Survey Question (msdyn_surveyquestion)<br>Survey Question Sequence (msdyn_questionsequence)<br>Geo Location Provider (msdyn_oc_geolocationprovider)<br>Operating Hour (msdyn_operatinghour)|
   |Voice|Voice channel setting (msdyn_ocvoicechannelsetting)<br>Authentication settings (msdyn_authenticationsettings)<br>Voice (msdyn_ocvoice)<br>Voice channel language setting (msdyn_ocvoicechannellanguagesetting)<br>Phone Number (msdyn_ocphonenumber)<br>Communication Provider Setting (msdyn_occommunicationprovidersetting)<br>Carrier (msdyn_occarrier)<br>Phone music (msdyn_ocphonemusic)<br>Operating Hour (msdyn_operatinghour)|
   |SMS|SMS number settings (msdyn_ocsmschannelsetting)<br>Phone Number (msdyn_ocphonenumber)<br>Communication Provider Setting (msdyn_occommunicationprovidersetting)<br>Carrier (msdyn_occarrier)<br>Operating Hour (msdyn_operatinghour)|
   |WhatsApp|WhatsApp account (msdyn_ocwhatsappchannelaccount)<br>WhatsApp number (msdyn_ocwhatsappchannelnumber)|
   |WeChat|WeChat account (msdyn_ocwechatchannelconfig)|
   |Apple Messages for Business|Apple messages for business account (msdyn_ocapplebusinessaccount)|

> [!IMPORTANT]
>
> - Please carefully review solution components before exporting solution. Take note of records that contain information regarding Azure Communication Services or 3rd party channels or other Microsoft components like Copilot Studio copilots or Customer Voice surveys, so you make required configurations in the destination environment.
> - If one or more work streams share the same Capacity Profile, when adding tables from one channel/workstream, tables from other channels/workstreams sharing the same Capacity Profile will also be added to the solution.

1. Use the Configuration Migration tool to create the schema and migrate the remaining configuration data from the source organization for workstreams and channels.

   - **Entity display name**: When you create the schema, select the entities in the same sequence as mentioned in the table.
   - **Attribute display name**: We recommend that you select the attributes defined in the following table. You don't need to select the out-of-the-box system defined attributes like Created By, Created On, Modified By, Modified On, and Owner. You can select custom attributes, if necessary.
   - **Use FetchXML to filter records**: For each entity, use the appropriate FetchXML query that's mentioned in the following table to get single, multiple, or all records based on your requirement. For single or multiple records, you need to use source organization to get the correct name in uiname and GUID in value. If required, you can use the ADVANCED FIND menu item to construct the appropriate FetchXML query.
   - **Configure import settings**: For the Work Stream entity, ensure that you only add the key fields and select the **Do not update existing records** checkbox to prevent updates to records in a table migrated through solutions.

   |S.No.|Channel(s)|Entity display name (Logical name)  |Attribute display name (Logical name)  |Use FetchXML to filter records  |
   |-----|----------|-----------|-----------|-----------|
   |1.|All channels|Workstream (msdyn_liveworkstream)|<ul><li>Channel (msdyn_streamsource)</li><li>Mode (msdyn_mode)</li><li>Name (msdyn_name)</li>Work Stream (msdyn_liveworkstreamid) </li></ul>|[**Sample 1: All workstreams of a channel**](#WS1All)<br><br>[**Sample 2: Single workstream**](#WS2Simple)<br><br>[**Sample 3: Multiple workstreams**](#WS3Multiple)|
   |2.|All messaging channels|Quick Reply (msdyn_cannedmessage)|<ul><li>Locale (msdyn_locale_field)</li><li>Message (msdyn_message)</li><li>Quick reply (msdyn_cannedmessageid)</li><li>TagsControlField (msdyn_tagscontrolfield)</li><li> Title (msdyn_title) </li></ul>|[**Sample 1: All workstreams of a channel**](#QR1All)<br><br>[**Sample 2: Single workstream**](#QR2Simple)<br><br>[**Sample 3: Multiple workstreams**](#QR3Multiple)|
   |3.|All messaging channels|Tag (msdyn_octag)|<ul><li>Name (msdyn_name)</li><li>Tag (msdyn_octagid)</li></ul>|[**Sample 1: All workstreams of a channel**](#Tag1All)<br><br>[**Sample 2: Single workstream**](#Tag2Simple)<br><br>[**Sample 3: Multiple workstreams**](#Tag3Multiple)|
   |4.|All channels|Message (msdyn_ocsystemmessage)|<ul><li>Channel (msdyn_streamsource)</li><li>Default language (msdyn_defaultlanguage)</li><li>Instance ID (msdyn_instanceid)</li><li>Message (msdyn_ocsystemmessageid)</li><li>Message description (msdyn_messagedescription)</li><li>Message recipient (msdyn_messagereceiver)</li><li>Message template trigger (msdyn_messagetemplatetrigger)</li><li>Message Text (msdyn_messagetext)</li><li>Message trigger (msdyn_systemmessageeventtype)</li><li>Message type (msdyn_messagetype)</li><li>Name (msdyn_name)</li><li> Widget (msdyn_widgetid) </li></ul>||
   |5.|All channels|Localization (msdyn_oclocalizationdata)|<ul><li>Automated message (msdyn_systemmessageid)</li><li>Default Localized Text (msdyn_defaultlocalizedtext)</li><li>Entity Column Name (msdyn_entitycolumnname)</li><li>Entity Name (msdyn_entityname)</li><li>Entity Record ID (msdyn_entityrecordid)</li> <li>Is default (msdyn_isdefault)</li><li>Language code (msdyn_customerlanguageid)</li><li>Language Code (msdyn_languagecode)</li><li>Localization (msdyn_oclocalizationdataid)</li><li>Localized text (msdyn_localizedtext)</li></ul>|[**FetchXML to filter records for channel localizations**](#CLAll)|

1. Generate the schema and save it.
1. Export the data and generate the compressed (zip) file.
1. Use the Configuration Migration tool, select the option to import data, and select the compressed file.

### FetchXML for workstream entity

**Sample 1: All workstreams of a channel**<a name="WS1All"></a>

```XML
<fetch>
	<entity name="msdyn_liveworkstream">
		<filter type="and">
			<condition attribute="msdyn_mode" operator="eq" value="717210001" />
			<condition attribute="msdyn_streamsource" operator="eq" value="<CHANNEL_ID>" />
		</filter>
	</entity>
</fetch> 
```
>Note
>
>To find <CHANNEL_ID> values for each channel you want to migrate work streams for, please go to Power Apps Maker Portal, select your source environment, go to Choices then open the Stream Source (msdyn_streamsource) choice. For example, the value for Voice channel is 192440000.


**Sample 2: Single workstream**<a name="WS2Single"></a>

```XML
<fetch>
	<entity name="msdyn_liveworkstream">
		<filter type="and">
			<condition attribute="msdyn_liveworkstreamid" operator="eq" uiname="Test workstream 1" uitype="msdyn_liveworkstream" value="{759255C7-7AC8-98E0-7E3E-59A7F0312ABC}" />
		</filter>
	</entity>
</fetch> 
```

**Sample 3: Multiple workstreams**<a name="WS3Multiple"></a>

```XML
<fetch>
	<entity name="msdyn_liveworkstream">
		<filter type="and">
			<condition attribute="msdyn_liveworkstreamid" operator="in">
				<value uiname="Test workstream 1" uitype="msdyn_liveworkstream">{759255C7-7AC8-98E0-7E3E-59A7F0312ABC}</value>
				<value uiname="Test workstream 2" uitype="msdyn_liveworkstream">{E6246229-33AC-5A9E-2FFE-51668AD44098}</value>
			</condition>
		</filter>
	</entity>
</fetch> 
```

### FetchXML for context variables entity

**Sample 1: All WhatsApp workstreams context variables**<a name="BKMK1lcwcv"></a>

```XML
<fetch>
    <entity name="msdyn_ocliveworkstreamcontextvariable" >
        <link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="inner" alias="aa" >
            <filter type="and" >
                <condition attribute="msdyn_streamsource" operator="eq" value="192300000" />
                <condition attribute="msdyn_mode" operator="eq" value="717210001" />
            </filter>
        </link-entity>
    </entity>
</fetch>
```

**Sample 2: Single WhatsApp workstream context variables**<a name="BKMK2lcwcv"></a> 

```XML
<fetch>
    <entity name="msdyn_ocliveworkstreamcontextvariable" >
        <filter type="and" >
            <condition attribute="msdyn_liveworkstreamid" operator="eq" uiname="WhatsApp Workstream" uitype="msdyn_liveworkstream" value="{D3A1F09D-51A0-A6B7-266D-58E1BDB97B53}" />
        </filter>
    </entity>
</fetch>
```

**Sample 3: Multiple WhatsApp workstreams context variables**<a name="BKMK3lcwcv"></a>

```XML
<fetch>
    <entity name="msdyn_ocliveworkstreamcontextvariable" >
        <filter type="or" >
            <condition attribute="msdyn_liveworkstreamid" operator="eq" uiname="WhatsApp Workstream" uitype="msdyn_liveworkstream" value="{D3A1F09D-51A0-A6B7-266D-58E1BDB97B53}" />
            <condition attribute="msdyn_liveworkstreamid" operator="eq" uiname="WhatsApp Workstream 1" uitype="msdyn_liveworkstream" value="{f9e18e67-d1a8-ed11-aad1-00224805c057}" />
        </filter>
    </entity>
</fetch>
```

### FetchXML for decision contract entity

**Sample 1: Decision contract for all WhatsApp workstreams**<a name="BKMK1dclcw"></a>

```XML
<fetch distinct="true" >
    <entity name="msdyn_decisioncontract" >
        <filter type="and" >
            <condition attribute="ismanaged" operator="eq" value="false" />
        </filter>
        <filter type="or" >
            <filter type="and" >
                <condition attribute="msdyn_mode" entityname="an" operator="eq" value="717210001" />
                <condition attribute="msdyn_streamsource" entityname="an" operator="eq" value="192300000" />
            </filter>
            <filter type="and" >
                <condition attribute="msdyn_mode" entityname="bd" operator="eq" value="717210001" />
                <condition attribute="msdyn_streamsource" entityname="bd" operator="eq" value="192300000" />
            </filter>
        </filter>
        <link-entity name="msdyn_liveworkstream" from="msdyn_routingcontractid" to="msdyn_decisioncontractid" link-type="outer" alias="an" />
        <link-entity name="msdyn_decisionruleset" from="msdyn_outputcontractid" to="msdyn_decisioncontractid" link-type="outer" alias="ba" >
            <link-entity name="msdyn_routingconfigurationstep" from="msdyn_rulesetid" to="msdyn_decisionrulesetid" link-type="outer" alias="bb" >
                <link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="outer" alias="bc" >
                    <link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="outer" alias="bd" />
                </link-entity>
            </link-entity>
        </link-entity>
    </entity>
</fetch>
```

**Sample 2: Decision contract for a single WhatsApp workstream**<a name="BKMK2dclcw"></a>

```XML
<fetch distinct="true" >
    <entity name="msdyn_decisioncontract" >
        <filter type="and" >
            <condition attribute="ismanaged" operator="eq" value="false" />
        </filter>
        <filter type="or" >
            <filter type="and" >
                <condition attribute="msdyn_liveworkstreamid" entityname="an" operator="eq" uiname="WhatsApp Workstream" uitype="msdyn_liveworkstream" value="{d3a1f09d-51a0-a6b7-266d-58e1bdb97b53}" />
            </filter>
            <filter type="and" >
                <condition attribute="msdyn_liveworkstreamid" entityname="an" operator="eq" uiname="WhatsApp Workstream" uitype="msdyn_liveworkstream" value="{d3a1f09d-51a0-a6b7-266d-58e1bdb97b53}" />
            </filter>
        </filter>
        <link-entity name="msdyn_liveworkstream" from="msdyn_routingcontractid" to="msdyn_decisioncontractid" link-type="outer" alias="an" />
        <link-entity name="msdyn_decisionruleset" from="msdyn_outputcontractid" to="msdyn_decisioncontractid" link-type="outer" alias="ba" >
            <link-entity name="msdyn_routingconfigurationstep" from="msdyn_rulesetid" to="msdyn_decisionrulesetid" link-type="outer" alias="bb" >
                <link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="outer" alias="bc" >
                    <link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="outer" alias="bd" />
                </link-entity>
            </link-entity>
        </link-entity>
    </entity>
</fetch>
```

**Sample 3: Decision contract for multiple WhatsApp workstreams**<a name="BKMK3dclcw"></a>

```XML
<fetch distinct="true" >
    <entity name="msdyn_decisioncontract" >
        <filter type="and" >
            <condition attribute="ismanaged" operator="eq" value="false" />
        </filter>
        <filter type="or" >
            <filter type="or" >
                <condition attribute="msdyn_liveworkstreamid" entityname="an" operator="eq" uiname="ALM WhatsApp Test Workstream" uitype="msdyn_liveworkstream" value="{d3a1f09d-51a0-a6b7-266d-58e1bdb97b53}" />
                <condition attribute="msdyn_liveworkstreamid" entityname="an" operator="eq" uiname="ALM WhatsApp Test Workstream" uitype="msdyn_liveworkstream" value="{f9e18e67-d1a8-ed11-aad1-00224805c057}" />
            </filter>
            <filter type="or" >
                <condition attribute="msdyn_liveworkstreamid" entityname="bd" operator="eq" uiname=" WhatsApp Workstream" uitype="msdyn_liveworkstream" value="{d3a1f09d-51a0-a6b7-266d-58e1bdb97b53}" />
                <condition attribute="msdyn_liveworkstreamid" entityname="bd" operator="eq" uiname="WhatsApp Workstream 2" uitype="msdyn_liveworkstream" value="{f9e18e67-d1a8-ed11-aad1-00224805c057}" />
            </filter>
        </filter>
        <link-entity name="msdyn_liveworkstream" from="msdyn_routingcontractid" to="msdyn_decisioncontractid" link-type="outer" alias="an" />
        <link-entity name="msdyn_decisionruleset" from="msdyn_outputcontractid" to="msdyn_decisioncontractid" link-type="outer" alias="ba" >
            <link-entity name="msdyn_routingconfigurationstep" from="msdyn_rulesetid" to="msdyn_decisionrulesetid" link-type="outer" alias="bb" >
                <link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="outer" alias="bc" >
                    <link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="outer" alias="bd" />
                </link-entity>
            </link-entity>
        </link-entity>
    </entity>
</fetch>
```

### FetchXML for decision ruleset entity

**Sample 1: Decision ruleset for all WhatsApp workstreams**<a name="BKMK1drlcw"></a>

```XML
<fetch distinct="true" >
    <entity name="msdyn_decisionruleset" >
        <filter type="or" >
            <filter type="and" >
                <condition attribute="msdyn_mode" entityname="af" operator="eq" value="717210001" />
                <condition attribute="msdyn_streamsource" entityname="af" operator="eq" value="192300000" />
            </filter>
        </filter>
        <link-entity name="msdyn_routingconfigurationstep" from="msdyn_rulesetid" to="msdyn_decisionrulesetid" link-type="outer" alias="ad" >
            <link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="outer" alias="ae" >
                <link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="outer" alias="af" />
            </link-entity>
        </link-entity>
    </entity>
</fetch>
```

**Sample 2: Decision ruleset for a single WhatsApp workstream**<a name="BKMK2drslcw"></a>

```XML
<fetch distinct="true" >
    <entity name="msdyn_decisionruleset" >
        <filter type="or" >
            <filter type="and" >
                <condition attribute="msdyn_liveworkstreamid" entityname="af" operator="eq" uiname="WhatsApp Workstream" uitype="msdyn_liveworkstream" value="{d3a1f09d-51a0-a6b7-266d-58e1bdb97b53}" />
            </filter>
        </filter>
        <link-entity name="msdyn_routingconfigurationstep" from="msdyn_rulesetid" to="msdyn_decisionrulesetid" link-type="outer" alias="ad" >
            <link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="outer" alias="ae" >
                <link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="outer" alias="af" />
            </link-entity>
        </link-entity>
    </entity>
</fetch>
```

**Sample 3: Decision ruleset for multiple WhatsApp workstreams**<a name="BKMK3drmlcw"></a>

```XML
<fetch distinct="true" >
    <entity name="msdyn_decisionruleset" >
        <filter type="or" >
            <filter type="or" >
                <condition attribute="msdyn_liveworkstreamid" entityname="af" operator="eq" uiname="WhatsApp Workstream" uitype="msdyn_liveworkstream" value="{d3a1f09d-51a0-a6b7-266d-58e1bdb97b53}" />
                <condition attribute="msdyn_liveworkstreamid" entityname="af" operator="eq" uiname="WhatsApp Workstream 1" uitype="msdyn_liveworkstream" value="{f9e18e67-d1a8-ed11-aad1-00224805c057}" />
            </filter>
        </filter>
        <link-entity name="msdyn_routingconfigurationstep" from="msdyn_rulesetid" to="msdyn_decisionrulesetid" link-type="outer" alias="ad" >
            <link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="outer" alias="ae" >
                <link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="outer" alias="af" />
            </link-entity>
        </link-entity>
    </entity>
</fetch>
```

### FetchXML for routing configuration entity

**Sample 1: Routing configuration for all WhatsApp workstreams**<a name="BKMK1rclcw"></a>

```XML
<fetch>
	<entity name="msdyn_routingconfiguration">
		<link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="inner" alias="ah">
			<filter type="and">
				<condition attribute="msdyn_mode" operator="eq" value="717210001" />
				<condition attribute="msdyn_streamsource" operator="eq" value="192300000" />
			</filter>
		</link-entity>
	</entity>
</fetch> 
```

**Sample 2: Routing configuration for a single WhatsApp workstream**<a name="BKMK2rclcw"></a>

```XML
<fetch>
	<entity name="msdyn_routingconfiguration">
		<link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="inner" alias="ah">
			<filter type="and">
				<condition attribute="msdyn_liveworkstreamid" operator="eq" uiname="Test WhatsApp Workstream 1" uitype="msdyn_liveworkstream" value="{759255C7-7AC8-98E0-7E3E-59A7F0312ABC}" />
			</filter>
		</link-entity>
	</entity>
</fetch>
```

**Sample 3: Routing configuration for multiple WhatsApp workstreams**<a name="BKMK3rclcw"></a>

```XML
<fetch>
	<entity name="msdyn_routingconfiguration">
		<link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="inner" alias="ah">
			<filter type="and">
				<condition attribute="msdyn_liveworkstreamid" operator="in">
					<value uiname="Test WhatsApp Workstream 1" uitype="msdyn_liveworkstream">{759255C7-7AC8-98E0-7E3E-59A7F0312ABC}</value>
					<value uiname="Test WhatsApp Workstream 2" uitype="msdyn_liveworkstream">{E6246229-33AC-5A9E-2FFE-51668AD44098}</value>
				</condition>
			</filter>
		</link-entity>
	</entity>
</fetch>
```

### FetchXML for routing configuration step entity

**Sample 1: Routing configuration step for all WhatsApp workstreams**<a name="BKMK1rcs"></a>

```XML
<fetch>
	<entity name="msdyn_routingconfigurationstep">
		<link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="inner" alias="ak">
			<link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="inner" alias="al">
				<filter type="and">
					<condition attribute="msdyn_mode" operator="eq" value="717210001" />
					<condition attribute="msdyn_streamsource" operator="eq" value="192300000" />
				</filter>
			</link-entity>
		</link-entity>
	</entity>
</fetch>
```

**Sample 2: Routing configuration step for a single WhatsApp workstream**<a name="BKMK2rcs"></a>

```XML
<fetch>
	<entity name="msdyn_routingconfigurationstep">
		<link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="inner" alias="ak">
			<link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="inner" alias="al">
				<filter type="and">
					<condition attribute="msdyn_liveworkstreamid" operator="eq" uiname="Test WhatsApp Workstream 1" uitype="msdyn_liveworkstream" value="{759255C7-7AC8-98E0-7E3E-59A7F0312EFC}" />
				</filter>
			</link-entity>
		</link-entity>
	</entity>
</fetch>
```

**Sample 3: Routing configuration step for multiple WhatsApp workstreams**<a name="BKMK3rcs"></a>

```XML
<fetch>
	<entity name="msdyn_routingconfigurationstep">
		<link-entity name="msdyn_routingconfiguration" from="msdyn_routingconfigurationid" to="msdyn_routingconfigurationid" link-type="inner" alias="ak">
			<link-entity name="msdyn_liveworkstream" from="msdyn_liveworkstreamid" to="msdyn_liveworkstreamid" link-type="inner" alias="al">
				<filter type="and">
					<condition attribute="msdyn_liveworkstreamid" operator="in">
						<value uiname="Test WhatsApp Workstream 1" uitype="msdyn_liveworkstream">{759255C7-7AC8-98E0-7E3E-59A7F0312ABC}</value>
						<value uiname="Test WhatsApp Workstream 2" uitype="msdyn_liveworkstream">{E6246229-33AC-5A9E-2FFE-51668AD44098}</value>
					</condition>
				</filter>
			</link-entity>
		</link-entity>
	</entity>
</fetch>
```

## Verify your migration

After you import the unified routing-related configuration data successfully from the source to target organization, perform the following steps in the target organization:

1. In the UI, make sure that the unified routing configuration and rulesets are rendered properly and don't display errors.

2. If skills and rating values are used in unified routing rulesets, then you need to manually link, associate, or create the users, bookable resources, and bookable resources characteristics records.

3. If capacity profiles are used in rulesets and workstreams for unified routing, then you need to manually link, associate, or create the users, bookable resources, and bookable resources capacity profile records.

## Considerations for export and import of data

[!INCLUDE[ur-migration considerations](../../includes/cc-ur-migration-considerations.md)]

### See also

[Migrate configuration for records based on unified routing](migrate-config-data-for-records-overview.md)  

